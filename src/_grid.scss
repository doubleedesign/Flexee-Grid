/**
 * Flexee Grid
 * Flexbox-based CSS grid system
 * Author: Leesa Ward
 * URI: https://www.github.com/doubleedesign/Flexee-Grid
 */

// Main config
$base-font-size: 	16px;
$gutter:     		2em;
$column-count: 		12;

// Breakpoints
$breakpoints: (
		'smaller'	: 30em,		// 480px
		'small'  	: 37.5em, 	// 600px
		'medium' 	: 48em, 	// 768px
		'tablet' 	: 60em, 	// 960px
		'large'  	: 80em,		// 1280px
		'xlarge' 	: 100em, 	// 1600px
		'xxlarge' 	: 120em, 	// 1920px
);

// Spacing
$grid-gutter: (
		'start' 	: 0.625em, // 10px
		'small'  	: 0.625em, // 10px
		'medium' 	: 1.250em, // 20px
		'tablet' 	: 1.250em, // 20px
		'large'  	: 1.875em, // 30px
		'xlarge' 	: 2.500em, // 40px
		'xxlarge' 	: 2.500em, // 50px
);
$global-padding: 1.875em;
$global-margin: 1.875em;

// Boundaries
$start: 			20em; 		// 320px, assuming $base-font-size is 16px
$boundary: 			140.625em; 	// 2250px; Note: 1920px is 120em if you prefer that
$row-width: 		80em; 		// The maximum width of each row.
// It may be different to $boundary, which is for the whole site.
// If you want to use the xlarge and xxlarge breakpoints for the layout,
// set this to the same or larger than the largest breakpoint you want to use.


// Breakpoint mixins
@mixin bp-small {
	@media only screen and (min-width: map-get($breakpoints, 'small')) {
		@content;
	}
}
@mixin bp-medium {
	@media only screen and (min-width: map-get($breakpoints, 'medium')) {
		@content;
	}
}
@mixin bp-tablet {
	@media only screen and (min-width: map-get($breakpoints, 'tablet')) {
		@content;
	}
}
@mixin bp-large {
	@media only screen and (min-width: map-get($breakpoints, 'large')) {
		@content;
	}
}
@mixin bp-xlarge {
	@media only screen and (min-width: map-get($breakpoints, 'xlarge')) {
		@content;
	}
}
@mixin bp-xxlarge {
	@media only screen and (min-width: map-get($breakpoints, 'xxlarge')) {
		@content;
	}
}

// General
body {
	min-width: $start;
	max-width: $boundary;
	margin: 0 auto;
}

[class*="row"]{
	box-sizing: border-box;
	display: flex;
	flex-flow: row wrap;
}

.column,
.columns {
	box-sizing: border-box;
	flex: 0 auto;
	padding-left: map-get($grid-gutter,start);
	padding-right: map-get($grid-gutter,start);

	@include bp-small {
		padding-left: map-get($grid-gutter,$small);
		padding-right: map-get($grid-gutter,$small);
	}

	@include bp-medium {
		padding-left: map-get($grid-gutter,$medium);
		padding-right: map-get($grid-gutter,$medium);
	}

	@include bp-tablet {
		padding-left: map-get($grid-gutter,$tablet);
		padding-right: map-get($grid-gutter,$tablet);
	}

	@include bp-large {
		padding-left: map-get($grid-gutter,$large);
		padding-right: map-get($grid-gutter,$large);
	}

	@include bp-xlarge {
		padding-left: map-get($grid-gutter,$xlarge);
		padding-right: map-get($grid-gutter,$xlarge);
	}

	@include bp-xxlarge {
		padding-left: map-get($grid-gutter,$xxlarge);
		padding-right: map-get($grid-gutter,$xxlarge);
	}
}

@mixin grid-gutter-collapse { // Removes the padding from columns
	padding-left: 0;
	padding-right: 0;
}

.no-gutter {
	@include grid-gutter-collapse;
}

// All rows
[class*="row"] {
	max-width: $row-width;
	margin: 0 auto;
}

/*
 * ==== OPTION ONE ====
 * Evenly distributed rows of blocks based on the class given to the containing row,
 * wrapping onto a new line if there's more
 */

@for $i from 1 through $column-count {

	.row-of-#{$i} {
		.column {
			flex-basis: 100%/$i;
			max-width: 100%/$i;
		}
	}

	@include bp-small {
		.small-row-of-#{$i} {
			.column {
				flex-basis: 100%/$i;
				max-width: 100%/$i;
			}
		}
	}

	@include bp-medium {
		.medium-row-of-#{$i} {
			.column {
				flex-basis: 100%/$i;
				max-width: 100%/$i;
			}
		}
	}

	@include bp-tablet {
		.tablet-row-of-#{$i} {
			.column {
				flex-basis: 100%/$i;
				max-width: 100%/$i;
			}
		}
	}

	@include bp-large {
		.large-row-of-#{$i} {
			.column {
				flex-basis: 100%/$i;
				max-width: 100%/$i;
			}
		}
	}

	@include bp-xlarge {
		.xlarge-row-of-#{$i} {
			.column {
				flex-basis: 100%/$i;
				max-width: 100%/$i;
			}
		}
	}

	@include bp-xxlarge {
		.xxlarge-row-of-#{$i} {
			.column {
				flex-basis: 100%/$i;
				max-width: 100%/$i;
			}
		}
	}
}


/*
 * ==== OPTION TWO ====
 * Variable width blocks based on the class given to the columns
 */

// Column widths
$columns-1: (100%/$column-count);
$columns-2: ($columns-1*2);
$columns-3: ($columns-1*3);
$columns-4: ($columns-1*4);
$columns-5: ($columns-1*5);
$columns-6: ($columns-1*6);
$columns-7: ($columns-1*7);
$columns-8: ($columns-1*8);
$columns-9: ($columns-1*9);
$columns-10: ($columns-1*10);
$columns-11: ($columns-1*11);
$columns-12: ($columns-1*12);
// If your $column-count is larger than 12, add more variables here accordingly. You will also need to add more column classes below.

.row .columns {
	&.start-1 { flex-basis: $columns-1; max-width: $columns-1; }
	&.start-2 { flex-basis: $columns-2; max-width: $columns-2; }
	&.start-3 { flex-basis: $columns-3; max-width: $columns-3; }
	&.start-4 { flex-basis: $columns-4; max-width: $columns-4; }
	&.start-5 { flex-basis: $columns-5; max-width: $columns-5; }
	&.start-6 { flex-basis: $columns-6; max-width: $columns-6; }
	&.start-7 { flex-basis: $columns-7; max-width: $columns-7; }
	&.start-8 { flex-basis: $columns-8; max-width: $columns-8; }
	&.start-9 { flex-basis: $columns-9; max-width: $columns-9; }
	&.start-10 { flex-basis: $columns-10; max-width: $columns-10; }
	&.start-11 { flex-basis: $columns-11; max-width: $columns-11; }
	&.start-12 { flex-basis: $columns-12; max-width: $columns-12; }

	@include bp-small {
		&.small-1 { flex-basis: $columns-1; max-width: $columns-1; }
		&.small-2 { flex-basis: $columns-2; max-width: $columns-2; }
		&.small-3 { flex-basis: $columns-3; max-width: $columns-3; }
		&.small-4 { flex-basis: $columns-4; max-width: $columns-4; }
		&.small-5 { flex-basis: $columns-5; max-width: $columns-5; }
		&.small-6 { flex-basis: $columns-6; max-width: $columns-6; }
		&.small-7 { flex-basis: $columns-7; max-width: $columns-7; }
		&.small-8 { flex-basis: $columns-8; max-width: $columns-8; }
		&.small-9 { flex-basis: $columns-9; max-width: $columns-9; }
		&.small-10 { flex-basis: $columns-10; max-width: $columns-10; }
		&.small-11 { flex-basis: $columns-11; max-width: $columns-11; }
		&.small-12 { flex-basis: $columns-12; max-width: $columns-12; }
	}

	@include bp-medium {
		&.medium-1 { flex-basis: $columns-1; max-width: $columns-1; }
		&.medium-2 { flex-basis: $columns-2; max-width: $columns-2; }
		&.medium-3 { flex-basis: $columns-3; max-width: $columns-3; }
		&.medium-4 { flex-basis: $columns-4; max-width: $columns-4; }
		&.medium-5 { flex-basis: $columns-5; max-width: $columns-5; }
		&.medium-6 { flex-basis: $columns-6; max-width: $columns-6; }
		&.medium-7 { flex-basis: $columns-7; max-width: $columns-7; }
		&.medium-8 { flex-basis: $columns-8; max-width: $columns-8; }
		&.medium-9 { flex-basis: $columns-9; max-width: $columns-9; }
		&.medium-10 { flex-basis: $columns-10; max-width: $columns-10; }
		&.medium-11 { flex-basis: $columns-11; max-width: $columns-11; }
		&.medium-12 { flex-basis: $columns-12; max-width: $columns-12; }
	}

	@include bp-tablet {
		&.tablet-1 { flex-basis: $columns-1; max-width: $columns-1; }
		&.tablet-2 { flex-basis: $columns-2; max-width: $columns-2; }
		&.tablet-3 { flex-basis: $columns-3; max-width: $columns-3; }
		&.tablet-4 { flex-basis: $columns-4; max-width: $columns-4; }
		&.tablet-5 { flex-basis: $columns-5; max-width: $columns-5; }
		&.tablet-6 { flex-basis: $columns-6; max-width: $columns-6; }
		&.tablet-7 { flex-basis: $columns-7; max-width: $columns-7; }
		&.tablet-8 { flex-basis: $columns-8; max-width: $columns-8; }
		&.tablet-9 { flex-basis: $columns-9; max-width: $columns-9; }
		&.tablet-10 { flex-basis: $columns-10; max-width: $columns-10; }
		&.tablet-11 { flex-basis: $columns-11; max-width: $columns-11; }
		&.tablet-12 { flex-basis: $columns-12; max-width: $columns-12; }
	}

	@include bp-large {
		&.large-1 { flex-basis: $columns-1; max-width: $columns-1; }
		&.large-2 { flex-basis: $columns-2; max-width: $columns-2; }
		&.large-3 { flex-basis: $columns-3; max-width: $columns-3; }
		&.large-4 { flex-basis: $columns-4; max-width: $columns-4; }
		&.large-5 { flex-basis: $columns-5; max-width: $columns-5; }
		&.large-6 { flex-basis: $columns-6; max-width: $columns-6; }
		&.large-7 { flex-basis: $columns-7; max-width: $columns-7; }
		&.large-8 { flex-basis: $columns-8; max-width: $columns-8; }
		&.large-9 { flex-basis: $columns-9; max-width: $columns-9; }
		&.large-10 { flex-basis: $columns-10; max-width: $columns-10; }
		&.large-11 { flex-basis: $columns-11; max-width: $columns-11; }
		&.large-12 { flex-basis: $columns-12; max-width: $columns-12; }
	}

	@include bp-xlarge {
		&.xlarge-1 { flex-basis: $columns-1; max-width: $columns-1; }
		&.xlarge-2 { flex-basis: $columns-2; max-width: $columns-2; }
		&.xlarge-3 { flex-basis: $columns-3; max-width: $columns-3; }
		&.xlarge-4 { flex-basis: $columns-4; max-width: $columns-4; }
		&.xlarge-5 { flex-basis: $columns-5; max-width: $columns-5; }
		&.xlarge-6 { flex-basis: $columns-6; max-width: $columns-6; }
		&.xlarge-7 { flex-basis: $columns-7; max-width: $columns-7; }
		&.xlarge-8 { flex-basis: $columns-8; max-width: $columns-8; }
		&.xlarge-9 { flex-basis: $columns-9; max-width: $columns-9; }
		&.xlarge-10 { flex-basis: $columns-10; max-width: $columns-10; }
		&.xlarge-11 { flex-basis: $columns-11; max-width: $columns-11; }
		&.xlarge-12 { flex-basis: $columns-12; max-width: $columns-12; }
	}

	@include bp-xxlarge {
		&.xxlarge-1 { flex-basis: $columns-1; max-width: $columns-1; }
		&.xxlarge-2 { flex-basis: $columns-2; max-width: $columns-2; }
		&.xxlarge-3 { flex-basis: $columns-3; max-width: $columns-3; }
		&.xxlarge-4 { flex-basis: $columns-4; max-width: $columns-4; }
		&.xxlarge-5 { flex-basis: $columns-5; max-width: $columns-5; }
		&.xxlarge-6 { flex-basis: $columns-6; max-width: $columns-6; }
		&.xxlarge-7 { flex-basis: $columns-7; max-width: $columns-7; }
		&.xxlarge-8 { flex-basis: $columns-8; max-width: $columns-8; }
		&.xxlarge-9 { flex-basis: $columns-9; max-width: $columns-9; }
		&.xxlarge-10 { flex-basis: $columns-10; max-width: $columns-10; }
		&.xxlarge-11 { flex-basis: $columns-11; max-width: $columns-11; }
		&.xxlarge-12 { flex-basis: $columns-12; max-width: $columns-12; }
	}

}


/*
 * ==== OPTION THREE ====
 * Spread all blocks evenly as long as their content fits, no matter how many there is.
 * Can be the messiest depending on how uniform your content is.
 */

.row-fit {
	> .column {
		flex: auto;
	}
}